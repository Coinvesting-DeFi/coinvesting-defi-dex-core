{
  "contractName": "CoinvestingDeFiFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/dev/Playground/Coinvesting DeFi/Dex/coinvesting-defi-dex-core/contracts/CoinvestingDeFiFactory.sol\":\"CoinvestingDeFiFactory\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"/home/dev/Playground/Coinvesting DeFi/Dex/coinvesting-defi-dex-core/contracts/CoinvestingDeFiERC20.sol\":{\"keccak256\":\"0x6dbc54dc4757125553ddb5ca5207e5331bab9ae959d31a4cf22663dc519d9536\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b5406ebae2f43068643a862d77e973e98375ceb8a3fc3224646f6bfaf203a855\",\"dweb:/ipfs/QmXXjPBa22Nb5uLdJ66SgZhbfmSiqLPS75WEq3qwqMZ4Eb\"]},\"/home/dev/Playground/Coinvesting DeFi/Dex/coinvesting-defi-dex-core/contracts/CoinvestingDeFiFactory.sol\":{\"keccak256\":\"0xcd3048d3c6b73698b4abdcde7724263dec2bc5d1009e1790a442091bc003904d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2aaf132b087ade0d44e4eef68c467bb6e4513e6396b1c279f61d698fd865d367\",\"dweb:/ipfs/QmNTrqqULG63A3HhVqbmWcCSRZrJQJZfFG7L1LPDfuGqPC\"]},\"/home/dev/Playground/Coinvesting DeFi/Dex/coinvesting-defi-dex-core/contracts/CoinvestingDeFiPair.sol\":{\"keccak256\":\"0xe57efb0a2e8fdcb26ebbf69f5a4b28ed6c4a25c6eeccc05264d8763329781c2b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e18f9bc2a434e201453ba62ee6f382218b5cefc4202671b76d57a8651210af77\",\"dweb:/ipfs/QmYM8sjHzdJcQ5C5j35Xqa6qRpftf9hEuXqieF5L1Z7dV2\"]},\"/home/dev/Playground/Coinvesting DeFi/Dex/coinvesting-defi-dex-core/contracts/interfaces/ICoinvestingDeFiCallee.sol\":{\"keccak256\":\"0x19d23033bbf972816d3dd5a41598ea7f18edcb135d7a5cd6327d5b1be78dfeb3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://df303e74dd397066c498870f9ec9c66b6d64a3e6364c4b295e30de28735d8f19\",\"dweb:/ipfs/QmcS9HQbBhbHgkYpLEdQoMgHC2HCJWjjyCf4LVk2QsLNJs\"]},\"/home/dev/Playground/Coinvesting DeFi/Dex/coinvesting-defi-dex-core/contracts/interfaces/ICoinvestingDeFiERC20.sol\":{\"keccak256\":\"0xf9c4d88a3df659654564e92c82b5131ea4d4e2c54988b186ed98c7764a4c0fcb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fadb0ab0552894f6a11ed21c067db3e5a33ceef0ce0d2cb4b43b4c05a3b56850\",\"dweb:/ipfs/QmetwEQtmHdEhBchK1jP56kUAo3ARte66Fj5Afm3sH79mV\"]},\"/home/dev/Playground/Coinvesting DeFi/Dex/coinvesting-defi-dex-core/contracts/interfaces/ICoinvestingDeFiFactory.sol\":{\"keccak256\":\"0x521a432f2f9fc642dbe4fdf7d02c1d7c6c3f8a301d4e240cf0f4a1a6008d9825\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1c7ae432413d72eafe4765d1af56b9972abc23452164ff4fbd0f2d4b1113e153\",\"dweb:/ipfs/QmY6kMKuLHcdqa3rGKWXC886Co1ie2AAbkKLXjSG8nBWUP\"]},\"/home/dev/Playground/Coinvesting DeFi/Dex/coinvesting-defi-dex-core/contracts/interfaces/ICoinvestingDeFiPair.sol\":{\"keccak256\":\"0x151922ce71bab79a02d0f287de39cb3a639751ca393a9be584a403a8746384ee\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2dd2ca2c6279e66294bef570562ecbe8e8c71ff002cbbf04bc727731bd1deea2\",\"dweb:/ipfs/Qma9ZP9vDc2msCX3rTJLLhWQh4zN7whfKtqcNxgjc3rN2G\"]},\"/home/dev/Playground/Coinvesting DeFi/Dex/coinvesting-defi-dex-core/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x235ff6a888fb9d3f453b06e7384cd9f56009002e8cacaf3d00ac1f9170036150\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8c769b0b6114c5f21da905611dc22a9a016bb007c86be735bbc45d526838edc6\",\"dweb:/ipfs/QmZVSx9bTSuDpxAE7kvoz8C213LzBCctJkgfvGZqs7JqSK\"]},\"/home/dev/Playground/Coinvesting DeFi/Dex/coinvesting-defi-dex-core/contracts/libraries/Math.sol\":{\"keccak256\":\"0x8c1d957ebf22906dc2e72d4f949752aea39ff2dea5bdf23d9ca71ef6f59abc42\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0559182b1bbd28a68b5171c59b457b38fa69d41988d98a4d4190a685ed5a9124\",\"dweb:/ipfs/QmbqvXQS1fpyw8T2VVVZ2HzGyxRLZfz2Y8oqcNT8NJwu34\"]},\"/home/dev/Playground/Coinvesting DeFi/Dex/coinvesting-defi-dex-core/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x4c2bd93fb28868727612d6949b93d5279a7354d0ad79d05b08eeb9da7d9ceed8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2f8be43ba7d371611025899021d55c33b6d0672be3645b9d911fc95cd523d371\",\"dweb:/ipfs/QmTYLR8rDamvc8uAZjcq3oEdQq8cKwtHbZKPshe5FaB1Ns\"]},\"/home/dev/Playground/Coinvesting DeFi/Dex/coinvesting-defi-dex-core/contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0x702d5fa04fcc01dfce88623ea082e3679bcfabdd4c06990713dcf15f234bf6c9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2f17c04e9c396fc4b7eee0719effc08e6bb609ca013c04339e87bc8868621742\",\"dweb:/ipfs/QmTpVKHmdMuXehtjmuZs6pvb9pJcycT7UdsU3WjSqVEYuA\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161359f38038061359f83398101604081905261002f91610054565b600280546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b61350e806100916000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a2e74af61161005b578063a2e74af61461011b578063c9c6539614610130578063e6a4390514610143578063f46901ed1461018457600080fd5b8063017e7e581461008d578063094b7415146100d75780631e3dd18b146100f7578063574f2ba31461010a575b600080fd5b6001546100ad9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6002546100ad9073ffffffffffffffffffffffffffffffffffffffff1681565b6100ad610105366004610805565b610197565b6000546040519081526020016100ce565b61012e6101293660046107b2565b6101ce565b005b6100ad61013e3660046107d3565b61029b565b6100ad6101513660046107d3565b600360209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b61012e6101923660046107b2565b6106b4565b600081815481106101a757600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60025473ffffffffffffffffffffffffffffffffffffffff163314610254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4641433a2043414c4c45525f41494e545f53455454455200000000000000000060448201526064015b60405180910390fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610333576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4641433a204944545f4144445200000000000000000000000000000000000000604482015260640161024b565b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610610370578385610373565b84845b909250905073ffffffffffffffffffffffffffffffffffffffff82166103f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4641433a205a45524f5f41444452000000000000000000000000000000000000604482015260640161024b565b73ffffffffffffffffffffffffffffffffffffffff828116600090815260036020908152604080832085851684529091529020541615610491576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4641433a20504149525f45584953545300000000000000000000000000000000604482015260640161024b565b6000604051806020016104a39061077c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f56040517f485cc95500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b1580156105ac57600080fd5b505af11580156105c0573d6000803e3d6000fd5b5050505073ffffffffffffffffffffffffffffffffffffffff84811660008181526003602081815260408084208987168086529083528185208054978d167fffffffffffffffffffffffff000000000000000000000000000000000000000098891681179091559383528185208686528352818520805488168517905584546001810186558580527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b60025473ffffffffffffffffffffffffffffffffffffffff163314610735576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4641433a2043414c4c45525f41494e545f534554544552000000000000000000604482015260640161024b565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b612cbb8061081e83390190565b803573ffffffffffffffffffffffffffffffffffffffff811681146107ad57600080fd5b919050565b6000602082840312156107c3578081fd5b6107cc82610789565b9392505050565b600080604083850312156107e5578081fd5b6107ee83610789565b91506107fc60208401610789565b90509250929050565b600060208284031215610816578081fd5b503591905056fe60806040526001600c5534801561001557600080fd5b50604080518082018252601381527f436f696e76657374696e672044654669205632000000000000000000000000006020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f918101919091527f850d2adb0e60a4b8060f1850d0980597a268babc3d8b274ec4110ff8be191a85918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015246608082018190523060a08301529060c00160408051601f19818403018152919052805160209091012060015550600580546001600160a01b03191633179055612b96806101256000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a714610499578063d505accf146104b9578063dd62ed3e146104cc578063fff6cae9146104f757600080fd5b8063ba9a7a561461045d578063bc25cf7714610466578063c45a01551461047957600080fd5b80637ecebe00116100d35780637ecebe00146103c657806389afcb44146103e657806395d89b411461040e578063a9059cbb1461044a57600080fd5b80636a6278421461038a57806370a082311461039d5780637464fc3d146103bd57600080fd5b806323b872dd116101665780633644e515116101405780633644e5151461035c578063485cc955146103655780635909c0d5146103785780635a3d54931461038157600080fd5b806323b872dd1461030857806330adf81f1461031b578063313ce5671461034257600080fd5b8063095ea7b311610197578063095ea7b3146102895780630dfe1681146102ac57806318160ddd146102f157600080fd5b8063022c0d9f146101be57806306fdde03146101d35780630902f1ac14610225575b600080fd5b6101d16101cc3660046127c6565b6104ff565b005b61020f6040518060400160405280601381526020017f436f696e76657374696e6720446546692056320000000000000000000000000081525081565b60405161021c91906128eb565b60405180910390f35b600b54600a54604080516dffffffffffffffffffffffffffff80851682526e01000000000000000000000000000090940490931660208401527401000000000000000000000000000000000000000090910463ffffffff169082015260600161021c565b61029c610297366004612763565b610bc0565b604051901515815260200161021c565b6009546102cc9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161021c565b6102fa60005481565b60405190815260200161021c565b61029c6103163660046126ae565b610bd6565b6102fa7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61034a601281565b60405160ff909116815260200161021c565b6102fa60015481565b6101d1610373366004612676565b610caf565b6102fa60075481565b6102fa60085481565b6102fa61039836600461263e565b610d83565b6102fa6103ab36600461263e565b60036020526000908152604090205481565b6102fa60065481565b6102fa6103d436600461263e565b60046020526000908152604090205481565b6103f96103f436600461263e565b611151565b6040805192835260208301919091520161021c565b61020f6040518060400160405280600a81526020017f434f494e5645582d56320000000000000000000000000000000000000000000081525081565b61029c610458366004612763565b611620565b6102fa6103e881565b6101d161047436600461263e565b61162d565b6005546102cc9073ffffffffffffffffffffffffffffffffffffffff1681565b600a546102cc9073ffffffffffffffffffffffffffffffffffffffff1681565b6101d16104c73660046126ee565b6117ff565b6102fa6104da366004612676565b600260209081526000928352604080842090915290825290205481565b6101d1611aea565b600c54600114610570576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f504149523a204c4f434b4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6000600c55841515806105835750600084115b6105e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f504149523a20494e5355465f4f55545f414d54000000000000000000000000006044820152606401610567565b600b546dffffffffffffffffffffffffffff808216916e01000000000000000000000000000090041681871080156106305750806dffffffffffffffffffffffffffff1686105b610696576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f504149523a20494e5355465f4c495100000000000000000000000000000000006044820152606401610567565b600954600a54600091829173ffffffffffffffffffffffffffffffffffffffff9182169190811690891682148015906106fb57508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b610761576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f504149523a20494e565f544f00000000000000000000000000000000000000006044820152606401610567565b8a1561077257610772828a8d611cd4565b891561078357610783818a8c611cd4565b8615610816576040517f58ac6ca700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a16906358ac6ca7906107e39033908f908f908e908e90600401612873565b600060405180830381600087803b1580156107fd57600080fd5b505af1158015610811573d6000803e3d6000fd5b505050505b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a082319060240160206040518083038186803b15801561087b57600080fd5b505afa15801561088f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b391906127ae565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8216906370a082319060240160206040518083038186803b15801561091b57600080fd5b505afa15801561092f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095391906127ae565b92505050600089856dffffffffffffffffffffffffffff166109759190612a24565b83116109825760006109a6565b61099c8a6dffffffffffffffffffffffffffff8716612a24565b6109a69084612a24565b905060006109c48a6dffffffffffffffffffffffffffff8716612a24565b83116109d15760006109f5565b6109eb8a6dffffffffffffffffffffffffffff8716612a24565b6109f59084612a24565b90506000821180610a065750600081115b610a6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f504149523a20494e5355465f494e5f414d5400000000000000000000000000006044820152606401610567565b6000610a8e610a7c846003611e74565b610a88876103e8611e74565b90611e87565b90506000610aa0610a7c846003611e74565b9050610acc620f4240610ac66dffffffffffffffffffffffffffff8b8116908b16611e74565b90611e74565b610ad68383611e74565b1015610b3e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f506169723a204b000000000000000000000000000000000000000000000000006044820152606401610567565b5050610b4c84848888611e93565b60408051838152602081018390529081018c9052606081018b905273ffffffffffffffffffffffffffffffffffffffff8a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600c55505050505050505050565b6000610bcd33848461214f565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14610c9a5773ffffffffffffffffffffffffffffffffffffffff84166000908152600260209081526040808320338452909152902054610c689083611e87565b73ffffffffffffffffffffffffffffffffffffffff851660009081526002602090815260408083203384529091529020555b610ca58484846121be565b5060019392505050565b60055473ffffffffffffffffffffffffffffffffffffffff163314610d30576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f504149523a2043414c4c45525f4d5553545f42455f46414300000000000000006044820152606401610567565b6009805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155600a8054929093169116179055565b6000600c54600114610df1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f504149523a204c4f434b454400000000000000000000000000000000000000006044820152606401610567565b6000600c819055600b54600954604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516dffffffffffffffffffffffffffff808516956e01000000000000000000000000000090950416939273ffffffffffffffffffffffffffffffffffffffff16916370a08231916024808301926020929190829003018186803b158015610e9257600080fd5b505afa158015610ea6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eca91906127ae565b600a546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015610f3957600080fd5b505afa158015610f4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7191906127ae565b90506000610f8f836dffffffffffffffffffffffffffff8716611e87565b90506000610fad836dffffffffffffffffffffffffffff8716611e87565b90506000610fbb878761228b565b60005490915080610ff257610fde6103e8610a88610fd98787611e74565b612405565b9850610fed60006103e8612475565b611047565b6110446dffffffffffffffffffffffffffff89166110108684611e74565b61101a919061298f565b6dffffffffffffffffffffffffffff89166110358685611e74565b61103f919061298f565b61251e565b98505b600089116110b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f504149523a20494e5355465f4c49515f4d494e540000000000000000000000006044820152606401610567565b6110bb8a8a612475565b6110c786868a8a611e93565b811561110357600b546110ff906dffffffffffffffffffffffffffff808216916e010000000000000000000000000000900416611e74565b6006555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600c5550949695505050505050565b600080600c546001146111c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f504149523a204c4f434b454400000000000000000000000000000000000000006044820152606401610567565b6000600c819055600b54600a54600954604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516dffffffffffffffffffffffffffff808616966e010000000000000000000000000000909604169473ffffffffffffffffffffffffffffffffffffffff9384169493909316929184916370a0823191602480820192602092909190829003018186803b15801561126e57600080fd5b505afa158015611282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a691906127ae565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a082319060240160206040518083038186803b15801561131157600080fd5b505afa158015611325573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134991906127ae565b30600090815260036020526040812054919250611366888861228b565b600054909150806113778487611e74565b611381919061298f565b9a508061138e8486611e74565b611398919061298f565b995060008b1180156113aa575060008a115b611410576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f504149523a20494e5355465f4c49515f4255524e0000000000000000000000006044820152606401610567565b61141a3084612534565b611425878d8d611cd4565b611430868d8c611cd4565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8816906370a082319060240160206040518083038186803b15801561149557600080fd5b505afa1580156114a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cd91906127ae565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290955073ffffffffffffffffffffffffffffffffffffffff8716906370a082319060240160206040518083038186803b15801561153557600080fd5b505afa158015611549573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156d91906127ae565b935061157b85858b8b611e93565b81156115b757600b546115b3906dffffffffffffffffffffffffffff808216916e010000000000000000000000000000900416611e74565b6006555b604080518c8152602081018c905273ffffffffffffffffffffffffffffffffffffffff8e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600c81905550915091565b6000610bcd3384846121be565b600c54600114611699576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f504149523a204c4f434b454400000000000000000000000000000000000000006044820152606401610567565b6000600c55600954600a54600b546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9384169390921691611770918491869161176b916dffffffffffffffffffffffffffff9091169084906370a08231906024015b60206040518083038186803b15801561173357600080fd5b505afa158015611747573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8891906127ae565b611cd4565b600b546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526117f5918391869161176b916e0100000000000000000000000000009091046dffffffffffffffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff8516906370a082319060240161171b565b50506001600c5550565b42841015611869576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f45524332303a20455850440000000000000000000000000000000000000000006044820152606401610567565b60015473ffffffffffffffffffffffffffffffffffffffff8816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9190876118c983612a90565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810187905260e0016040516020818303038152906040528051906020012060405160200161196a9291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156119f3573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590611a6e57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611ad4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f45524332303a20494e565f5349470000000000000000000000000000000000006044820152606401610567565b611adf89898961214f565b505050505050505050565b600c54600114611b56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f504149523a204c4f434b454400000000000000000000000000000000000000006044820152606401610567565b6000600c556009546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152611ccd9173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b158015611bc657600080fd5b505afa158015611bda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bfe91906127ae565b600a546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015611c6757600080fd5b505afa158015611c7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c9f91906127ae565b600b546dffffffffffffffffffffffffffff808216916e010000000000000000000000000000900416611e93565b6001600c55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e743235362900000000000000602091820152815173ffffffffffffffffffffffffffffffffffffffff85811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392871691611d9b9190612857565b6000604051808303816000865af19150503d8060008114611dd8576040519150601f19603f3d011682016040523d82523d6000602084013e611ddd565b606091505b5091509150818015611e07575080511580611e07575080806020019051810190611e07919061278e565b611e6d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f504149523a20545846525f464c000000000000000000000000000000000000006044820152606401610567565b5050505050565b6000611e8082846129e7565b9392505050565b6000611e808284612a24565b6dffffffffffffffffffffffffffff8411801590611eaf575060015b611f15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f504149523a204f564600000000000000000000000000000000000000000000006044820152606401610567565b6000611f2664010000000042612ac9565b600a54909150600090611f579074010000000000000000000000000000000000000000900463ffffffff1683612a3b565b905060008163ffffffff16118015611f7e57506dffffffffffffffffffffffffffff841615155b8015611f9957506dffffffffffffffffffffffffffff831615155b15612067578063ffffffff16611fd685611fb2866125e5565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690612616565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611ffe91906129e7565b6007600082825461200f919061293c565b909155505063ffffffff811661202884611fb2876125e5565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661205091906129e7565b60086000828254612061919061293c565b90915550505b600b80546dffffffffffffffffffffffffffff8781166e0100000000000000000000000000009081027fffffffff000000000000000000000000000000000000000000000000000000009093168a8316179290921792839055600a805463ffffffff871674010000000000000000000000000000000000000000027fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff909116179055604080518483168152929093041660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260409020546121ee9082611e87565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260036020526040808220939093559084168152205461222a9082612632565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526003602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906121b19085815260200190565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b1580156122f657600080fd5b505afa15801561230a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061232e919061265a565b60065473ffffffffffffffffffffffffffffffffffffffff82161580159450919250906123f15780156123ec57600061237d610fd96dffffffffffffffffffffffffffff888116908816611e74565b9050600061238a83612405565b9050808211156123e95760006123ac6123a38484611e87565b60005490611e74565b905060006123c5836123bf866005611e74565b90612632565b905060006123d3828461298f565b905080156123e5576123e58782612475565b5050505b50505b6123fd565b80156123fd5760006006555b505092915050565b60006003821115612466575080600061241f60028361298f565b61242a90600161293c565b90505b8181101561246057905080600281612445818661298f565b61244f919061293c565b612459919061298f565b905061242d565b50919050565b8115612470575060015b919050565b6000546124829082612632565b600090815573ffffffffffffffffffffffffffffffffffffffff83168152600360205260409020546124b49082612632565b73ffffffffffffffffffffffffffffffffffffffff83166000818152600360205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906125129085815260200190565b60405180910390a35050565b600081831061252d5781611e80565b5090919050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020546125649082611e87565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260036020526040812091909155546125989082611e87565b600090815560405182815273ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001612512565b60006126106e0100000000000000000000000000006dffffffffffffffffffffffffffff84166129a3565b92915050565b6000611e806dffffffffffffffffffffffffffff831684612954565b6000611e80828461293c565b60006020828403121561264f578081fd5b8135611e8081612b3b565b60006020828403121561266b578081fd5b8151611e8081612b3b565b60008060408385031215612688578081fd5b823561269381612b3b565b915060208301356126a381612b3b565b809150509250929050565b6000806000606084860312156126c2578081fd5b83356126cd81612b3b565b925060208401356126dd81612b3b565b929592945050506040919091013590565b600080600080600080600060e0888a031215612708578283fd5b873561271381612b3b565b9650602088013561272381612b3b565b95506040880135945060608801359350608088013560ff81168114612746578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215612775578182fd5b823561278081612b3b565b946020939093013593505050565b60006020828403121561279f578081fd5b81518015158114611e80578182fd5b6000602082840312156127bf578081fd5b5051919050565b6000806000806000608086880312156127dd578081fd5b853594506020860135935060408601356127f681612b3b565b9250606086013567ffffffffffffffff80821115612812578283fd5b818801915088601f830112612825578283fd5b813581811115612833578384fd5b896020828501011115612844578384fd5b9699959850939650602001949392505050565b60008251612869818460208701612a60565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff8616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101949350505050565b602081526000825180602084015261290a816040850160208701612a60565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000821982111561294f5761294f612add565b500190565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8084168061298357612983612b0c565b92169190910492915050565b60008261299e5761299e612b0c565b500490565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff808316818516818304811182151516156129de576129de612add565b02949350505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612a1f57612a1f612add565b500290565b600082821015612a3657612a36612add565b500390565b600063ffffffff83811690831681811015612a5857612a58612add565b039392505050565b60005b83811015612a7b578181015183820152602001612a63565b83811115612a8a576000848401525b50505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612ac257612ac2612add565b5060010190565b600082612ad857612ad8612b0c565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114612b5d57600080fd5b5056fea26469706673582212208b248465cfa239c5e8db41ac1ee616c6b7109d756e4cbaabb67db48ddadf4cc964736f6c63430008040033a264697066735822122036fdfd02941ca9960fda0f47fa189ef7514cc6f1128fb017d2505bdddb90cc3864736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063a2e74af61161005b578063a2e74af61461011b578063c9c6539614610130578063e6a4390514610143578063f46901ed1461018457600080fd5b8063017e7e581461008d578063094b7415146100d75780631e3dd18b146100f7578063574f2ba31461010a575b600080fd5b6001546100ad9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6002546100ad9073ffffffffffffffffffffffffffffffffffffffff1681565b6100ad610105366004610805565b610197565b6000546040519081526020016100ce565b61012e6101293660046107b2565b6101ce565b005b6100ad61013e3660046107d3565b61029b565b6100ad6101513660046107d3565b600360209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b61012e6101923660046107b2565b6106b4565b600081815481106101a757600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60025473ffffffffffffffffffffffffffffffffffffffff163314610254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4641433a2043414c4c45525f41494e545f53455454455200000000000000000060448201526064015b60405180910390fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610333576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4641433a204944545f4144445200000000000000000000000000000000000000604482015260640161024b565b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1610610370578385610373565b84845b909250905073ffffffffffffffffffffffffffffffffffffffff82166103f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4641433a205a45524f5f41444452000000000000000000000000000000000000604482015260640161024b565b73ffffffffffffffffffffffffffffffffffffffff828116600090815260036020908152604080832085851684529091529020541615610491576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4641433a20504149525f45584953545300000000000000000000000000000000604482015260640161024b565b6000604051806020016104a39061077c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f56040517f485cc95500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b1580156105ac57600080fd5b505af11580156105c0573d6000803e3d6000fd5b5050505073ffffffffffffffffffffffffffffffffffffffff84811660008181526003602081815260408084208987168086529083528185208054978d167fffffffffffffffffffffffff000000000000000000000000000000000000000098891681179091559383528185208686528352818520805488168517905584546001810186558580527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b60025473ffffffffffffffffffffffffffffffffffffffff163314610735576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4641433a2043414c4c45525f41494e545f534554544552000000000000000000604482015260640161024b565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b612cbb8061081e83390190565b803573ffffffffffffffffffffffffffffffffffffffff811681146107ad57600080fd5b919050565b6000602082840312156107c3578081fd5b6107cc82610789565b9392505050565b600080604083850312156107e5578081fd5b6107ee83610789565b91506107fc60208401610789565b90509250929050565b600060208284031215610816578081fd5b503591905056fe60806040526001600c5534801561001557600080fd5b50604080518082018252601381527f436f696e76657374696e672044654669205632000000000000000000000000006020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f918101919091527f850d2adb0e60a4b8060f1850d0980597a268babc3d8b274ec4110ff8be191a85918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015246608082018190523060a08301529060c00160408051601f19818403018152919052805160209091012060015550600580546001600160a01b03191633179055612b96806101256000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a714610499578063d505accf146104b9578063dd62ed3e146104cc578063fff6cae9146104f757600080fd5b8063ba9a7a561461045d578063bc25cf7714610466578063c45a01551461047957600080fd5b80637ecebe00116100d35780637ecebe00146103c657806389afcb44146103e657806395d89b411461040e578063a9059cbb1461044a57600080fd5b80636a6278421461038a57806370a082311461039d5780637464fc3d146103bd57600080fd5b806323b872dd116101665780633644e515116101405780633644e5151461035c578063485cc955146103655780635909c0d5146103785780635a3d54931461038157600080fd5b806323b872dd1461030857806330adf81f1461031b578063313ce5671461034257600080fd5b8063095ea7b311610197578063095ea7b3146102895780630dfe1681146102ac57806318160ddd146102f157600080fd5b8063022c0d9f146101be57806306fdde03146101d35780630902f1ac14610225575b600080fd5b6101d16101cc3660046127c6565b6104ff565b005b61020f6040518060400160405280601381526020017f436f696e76657374696e6720446546692056320000000000000000000000000081525081565b60405161021c91906128eb565b60405180910390f35b600b54600a54604080516dffffffffffffffffffffffffffff80851682526e01000000000000000000000000000090940490931660208401527401000000000000000000000000000000000000000090910463ffffffff169082015260600161021c565b61029c610297366004612763565b610bc0565b604051901515815260200161021c565b6009546102cc9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161021c565b6102fa60005481565b60405190815260200161021c565b61029c6103163660046126ae565b610bd6565b6102fa7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61034a601281565b60405160ff909116815260200161021c565b6102fa60015481565b6101d1610373366004612676565b610caf565b6102fa60075481565b6102fa60085481565b6102fa61039836600461263e565b610d83565b6102fa6103ab36600461263e565b60036020526000908152604090205481565b6102fa60065481565b6102fa6103d436600461263e565b60046020526000908152604090205481565b6103f96103f436600461263e565b611151565b6040805192835260208301919091520161021c565b61020f6040518060400160405280600a81526020017f434f494e5645582d56320000000000000000000000000000000000000000000081525081565b61029c610458366004612763565b611620565b6102fa6103e881565b6101d161047436600461263e565b61162d565b6005546102cc9073ffffffffffffffffffffffffffffffffffffffff1681565b600a546102cc9073ffffffffffffffffffffffffffffffffffffffff1681565b6101d16104c73660046126ee565b6117ff565b6102fa6104da366004612676565b600260209081526000928352604080842090915290825290205481565b6101d1611aea565b600c54600114610570576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f504149523a204c4f434b4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6000600c55841515806105835750600084115b6105e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f504149523a20494e5355465f4f55545f414d54000000000000000000000000006044820152606401610567565b600b546dffffffffffffffffffffffffffff808216916e01000000000000000000000000000090041681871080156106305750806dffffffffffffffffffffffffffff1686105b610696576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f504149523a20494e5355465f4c495100000000000000000000000000000000006044820152606401610567565b600954600a54600091829173ffffffffffffffffffffffffffffffffffffffff9182169190811690891682148015906106fb57508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b610761576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f504149523a20494e565f544f00000000000000000000000000000000000000006044820152606401610567565b8a1561077257610772828a8d611cd4565b891561078357610783818a8c611cd4565b8615610816576040517f58ac6ca700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a16906358ac6ca7906107e39033908f908f908e908e90600401612873565b600060405180830381600087803b1580156107fd57600080fd5b505af1158015610811573d6000803e3d6000fd5b505050505b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a082319060240160206040518083038186803b15801561087b57600080fd5b505afa15801561088f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b391906127ae565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290945073ffffffffffffffffffffffffffffffffffffffff8216906370a082319060240160206040518083038186803b15801561091b57600080fd5b505afa15801561092f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095391906127ae565b92505050600089856dffffffffffffffffffffffffffff166109759190612a24565b83116109825760006109a6565b61099c8a6dffffffffffffffffffffffffffff8716612a24565b6109a69084612a24565b905060006109c48a6dffffffffffffffffffffffffffff8716612a24565b83116109d15760006109f5565b6109eb8a6dffffffffffffffffffffffffffff8716612a24565b6109f59084612a24565b90506000821180610a065750600081115b610a6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f504149523a20494e5355465f494e5f414d5400000000000000000000000000006044820152606401610567565b6000610a8e610a7c846003611e74565b610a88876103e8611e74565b90611e87565b90506000610aa0610a7c846003611e74565b9050610acc620f4240610ac66dffffffffffffffffffffffffffff8b8116908b16611e74565b90611e74565b610ad68383611e74565b1015610b3e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f506169723a204b000000000000000000000000000000000000000000000000006044820152606401610567565b5050610b4c84848888611e93565b60408051838152602081018390529081018c9052606081018b905273ffffffffffffffffffffffffffffffffffffffff8a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600c55505050505050505050565b6000610bcd33848461214f565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14610c9a5773ffffffffffffffffffffffffffffffffffffffff84166000908152600260209081526040808320338452909152902054610c689083611e87565b73ffffffffffffffffffffffffffffffffffffffff851660009081526002602090815260408083203384529091529020555b610ca58484846121be565b5060019392505050565b60055473ffffffffffffffffffffffffffffffffffffffff163314610d30576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f504149523a2043414c4c45525f4d5553545f42455f46414300000000000000006044820152606401610567565b6009805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155600a8054929093169116179055565b6000600c54600114610df1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f504149523a204c4f434b454400000000000000000000000000000000000000006044820152606401610567565b6000600c819055600b54600954604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516dffffffffffffffffffffffffffff808516956e01000000000000000000000000000090950416939273ffffffffffffffffffffffffffffffffffffffff16916370a08231916024808301926020929190829003018186803b158015610e9257600080fd5b505afa158015610ea6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eca91906127ae565b600a546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015610f3957600080fd5b505afa158015610f4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7191906127ae565b90506000610f8f836dffffffffffffffffffffffffffff8716611e87565b90506000610fad836dffffffffffffffffffffffffffff8716611e87565b90506000610fbb878761228b565b60005490915080610ff257610fde6103e8610a88610fd98787611e74565b612405565b9850610fed60006103e8612475565b611047565b6110446dffffffffffffffffffffffffffff89166110108684611e74565b61101a919061298f565b6dffffffffffffffffffffffffffff89166110358685611e74565b61103f919061298f565b61251e565b98505b600089116110b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f504149523a20494e5355465f4c49515f4d494e540000000000000000000000006044820152606401610567565b6110bb8a8a612475565b6110c786868a8a611e93565b811561110357600b546110ff906dffffffffffffffffffffffffffff808216916e010000000000000000000000000000900416611e74565b6006555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600c5550949695505050505050565b600080600c546001146111c0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f504149523a204c4f434b454400000000000000000000000000000000000000006044820152606401610567565b6000600c819055600b54600a54600954604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290516dffffffffffffffffffffffffffff808616966e010000000000000000000000000000909604169473ffffffffffffffffffffffffffffffffffffffff9384169493909316929184916370a0823191602480820192602092909190829003018186803b15801561126e57600080fd5b505afa158015611282573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a691906127ae565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff8416906370a082319060240160206040518083038186803b15801561131157600080fd5b505afa158015611325573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134991906127ae565b30600090815260036020526040812054919250611366888861228b565b600054909150806113778487611e74565b611381919061298f565b9a508061138e8486611e74565b611398919061298f565b995060008b1180156113aa575060008a115b611410576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f504149523a20494e5355465f4c49515f4255524e0000000000000000000000006044820152606401610567565b61141a3084612534565b611425878d8d611cd4565b611430868d8c611cd4565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8816906370a082319060240160206040518083038186803b15801561149557600080fd5b505afa1580156114a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cd91906127ae565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290955073ffffffffffffffffffffffffffffffffffffffff8716906370a082319060240160206040518083038186803b15801561153557600080fd5b505afa158015611549573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156d91906127ae565b935061157b85858b8b611e93565b81156115b757600b546115b3906dffffffffffffffffffffffffffff808216916e010000000000000000000000000000900416611e74565b6006555b604080518c8152602081018c905273ffffffffffffffffffffffffffffffffffffffff8e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600c81905550915091565b6000610bcd3384846121be565b600c54600114611699576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f504149523a204c4f434b454400000000000000000000000000000000000000006044820152606401610567565b6000600c55600954600a54600b546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9384169390921691611770918491869161176b916dffffffffffffffffffffffffffff9091169084906370a08231906024015b60206040518083038186803b15801561173357600080fd5b505afa158015611747573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8891906127ae565b611cd4565b600b546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526117f5918391869161176b916e0100000000000000000000000000009091046dffffffffffffffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff8516906370a082319060240161171b565b50506001600c5550565b42841015611869576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f45524332303a20455850440000000000000000000000000000000000000000006044820152606401610567565b60015473ffffffffffffffffffffffffffffffffffffffff8816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9190876118c983612a90565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810187905260e0016040516020818303038152906040528051906020012060405160200161196a9291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156119f3573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590611a6e57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611ad4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f45524332303a20494e565f5349470000000000000000000000000000000000006044820152606401610567565b611adf89898961214f565b505050505050505050565b600c54600114611b56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f504149523a204c4f434b454400000000000000000000000000000000000000006044820152606401610567565b6000600c556009546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152611ccd9173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b158015611bc657600080fd5b505afa158015611bda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bfe91906127ae565b600a546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015611c6757600080fd5b505afa158015611c7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c9f91906127ae565b600b546dffffffffffffffffffffffffffff808216916e010000000000000000000000000000900416611e93565b6001600c55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e743235362900000000000000602091820152815173ffffffffffffffffffffffffffffffffffffffff85811660248301526044808301869052845180840390910181526064909201845291810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392871691611d9b9190612857565b6000604051808303816000865af19150503d8060008114611dd8576040519150601f19603f3d011682016040523d82523d6000602084013e611ddd565b606091505b5091509150818015611e07575080511580611e07575080806020019051810190611e07919061278e565b611e6d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f504149523a20545846525f464c000000000000000000000000000000000000006044820152606401610567565b5050505050565b6000611e8082846129e7565b9392505050565b6000611e808284612a24565b6dffffffffffffffffffffffffffff8411801590611eaf575060015b611f15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f504149523a204f564600000000000000000000000000000000000000000000006044820152606401610567565b6000611f2664010000000042612ac9565b600a54909150600090611f579074010000000000000000000000000000000000000000900463ffffffff1683612a3b565b905060008163ffffffff16118015611f7e57506dffffffffffffffffffffffffffff841615155b8015611f9957506dffffffffffffffffffffffffffff831615155b15612067578063ffffffff16611fd685611fb2866125e5565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1690612616565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611ffe91906129e7565b6007600082825461200f919061293c565b909155505063ffffffff811661202884611fb2876125e5565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661205091906129e7565b60086000828254612061919061293c565b90915550505b600b80546dffffffffffffffffffffffffffff8781166e0100000000000000000000000000009081027fffffffff000000000000000000000000000000000000000000000000000000009093168a8316179290921792839055600a805463ffffffff871674010000000000000000000000000000000000000000027fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff909116179055604080518483168152929093041660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260409020546121ee9082611e87565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260036020526040808220939093559084168152205461222a9082612632565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526003602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906121b19085815260200190565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b1580156122f657600080fd5b505afa15801561230a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061232e919061265a565b60065473ffffffffffffffffffffffffffffffffffffffff82161580159450919250906123f15780156123ec57600061237d610fd96dffffffffffffffffffffffffffff888116908816611e74565b9050600061238a83612405565b9050808211156123e95760006123ac6123a38484611e87565b60005490611e74565b905060006123c5836123bf866005611e74565b90612632565b905060006123d3828461298f565b905080156123e5576123e58782612475565b5050505b50505b6123fd565b80156123fd5760006006555b505092915050565b60006003821115612466575080600061241f60028361298f565b61242a90600161293c565b90505b8181101561246057905080600281612445818661298f565b61244f919061293c565b612459919061298f565b905061242d565b50919050565b8115612470575060015b919050565b6000546124829082612632565b600090815573ffffffffffffffffffffffffffffffffffffffff83168152600360205260409020546124b49082612632565b73ffffffffffffffffffffffffffffffffffffffff83166000818152600360205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906125129085815260200190565b60405180910390a35050565b600081831061252d5781611e80565b5090919050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020546125649082611e87565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260036020526040812091909155546125989082611e87565b600090815560405182815273ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001612512565b60006126106e0100000000000000000000000000006dffffffffffffffffffffffffffff84166129a3565b92915050565b6000611e806dffffffffffffffffffffffffffff831684612954565b6000611e80828461293c565b60006020828403121561264f578081fd5b8135611e8081612b3b565b60006020828403121561266b578081fd5b8151611e8081612b3b565b60008060408385031215612688578081fd5b823561269381612b3b565b915060208301356126a381612b3b565b809150509250929050565b6000806000606084860312156126c2578081fd5b83356126cd81612b3b565b925060208401356126dd81612b3b565b929592945050506040919091013590565b600080600080600080600060e0888a031215612708578283fd5b873561271381612b3b565b9650602088013561272381612b3b565b95506040880135945060608801359350608088013560ff81168114612746578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215612775578182fd5b823561278081612b3b565b946020939093013593505050565b60006020828403121561279f578081fd5b81518015158114611e80578182fd5b6000602082840312156127bf578081fd5b5051919050565b6000806000806000608086880312156127dd578081fd5b853594506020860135935060408601356127f681612b3b565b9250606086013567ffffffffffffffff80821115612812578283fd5b818801915088601f830112612825578283fd5b813581811115612833578384fd5b896020828501011115612844578384fd5b9699959850939650602001949392505050565b60008251612869818460208701612a60565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff8616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101949350505050565b602081526000825180602084015261290a816040850160208701612a60565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000821982111561294f5761294f612add565b500190565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8084168061298357612983612b0c565b92169190910492915050565b60008261299e5761299e612b0c565b500490565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff808316818516818304811182151516156129de576129de612add565b02949350505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612a1f57612a1f612add565b500290565b600082821015612a3657612a36612add565b500390565b600063ffffffff83811690831681811015612a5857612a58612add565b039392505050565b60005b83811015612a7b578181015183820152602001612a63565b83811115612a8a576000848401525b50505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612ac257612ac2612add565b5060010190565b600082612ad857612ad8612b0c565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114612b5d57600080fd5b5056fea26469706673582212208b248465cfa239c5e8db41ac1ee616c6b7109d756e4cbaabb67db48ddadf4cc964736f6c63430008040033a264697066735822122036fdfd02941ca9960fda0f47fa189ef7514cc6f1128fb017d2505bdddb90cc3864736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:326:12",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:12",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:12"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:12"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:12",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:12",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:12"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:12"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:12",
                "type": ""
              }
            ],
            "src": "14:310:12"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3685:12",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:12",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:12",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:12"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:12"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:12",
                "type": ""
              }
            ],
            "src": "14:196:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "285:126:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "331:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "340:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "348:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "333:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "333:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "333:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "306:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "315:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "302:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "302:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "327:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "298:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "298:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "295:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "366:39:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "395:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "376:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:29:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "366:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "251:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "262:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "274:6:12",
                "type": ""
              }
            ],
            "src": "215:196:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:183:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "549:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "558:6:12"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "566:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "551:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "551:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "551:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "524:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "533:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "520:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "520:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "545:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "516:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "516:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "513:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "584:39:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "613:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "594:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "594:29:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "584:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "632:48:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "665:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "676:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "661:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "661:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "642:18:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "642:38:12"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "632:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "461:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "472:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "484:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "492:6:12",
                "type": ""
              }
            ],
            "src": "416:270:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "761:120:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "807:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "816:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "824:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "809:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "809:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "809:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "782:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "791:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "778:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "778:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "803:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "774:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "774:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "771:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "842:33:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "865:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "852:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "852:23:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "842:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "727:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "738:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "750:6:12",
                "type": ""
              }
            ],
            "src": "691:190:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1033:221:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1043:76:12",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1053:66:12",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1047:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1135:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1148:2:12",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1152:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1144:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1144:15:12"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1161:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1140:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1140:24:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1128:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1128:37:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1128:37:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1185:3:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1190:2:12",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1181:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1181:12:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1203:2:12",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "1207:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1199:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1199:15:12"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1216:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1195:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1195:24:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1174:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1174:46:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1174:46:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1229:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1240:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1245:2:12",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1236:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1236:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1229:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1001:3:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1006:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1014:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1025:3:12",
                "type": ""
              }
            ],
            "src": "886:368:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1360:125:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1370:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1382:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1393:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1378:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1378:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1370:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1412:9:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1427:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1435:42:12",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1423:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1423:55:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1405:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1405:74:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1405:74:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1329:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1340:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1351:4:12",
                "type": ""
              }
            ],
            "src": "1259:226:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1619:198:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1629:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1641:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1652:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1637:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1637:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1629:4:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1664:52:12",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1674:42:12",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1668:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1732:9:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1747:6:12"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1755:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1743:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1743:15:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1725:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1725:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1725:34:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1779:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1790:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1775:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1775:18:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1799:6:12"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1807:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1795:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1795:15:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1768:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1768:43:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1768:43:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1580:9:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1591:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1599:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1610:4:12",
                "type": ""
              }
            ],
            "src": "1490:327:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1951:168:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1961:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1973:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1984:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1969:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1969:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1961:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2003:9:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2018:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2026:42:12",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2014:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2014:55:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1996:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1996:74:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1996:74:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2090:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2101:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2086:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2086:18:12"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2106:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2079:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2079:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2079:34:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1912:9:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1923:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1931:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1942:4:12",
                "type": ""
              }
            ],
            "src": "1822:297:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2298:173:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2315:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2326:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2308:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2308:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2308:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2349:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2360:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2345:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2345:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2365:2:12",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2338:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2338:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2338:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2388:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2399:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2384:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2384:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2404:25:12",
                        "type": "",
                        "value": "FAC: CALLER_AINT_SETTER"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2377:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2377:53:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2377:53:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2439:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2451:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2462:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2447:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2447:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2439:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7edd150e97805c350c69c1cdb53519db184f07073a209205e003b70a499d164c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2275:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2289:4:12",
                "type": ""
              }
            ],
            "src": "2124:347:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2650:163:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2667:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2678:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2660:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2660:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2660:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2701:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2712:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2697:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2697:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2717:2:12",
                        "type": "",
                        "value": "13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2690:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2690:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2690:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2740:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2751:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2736:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2736:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2756:15:12",
                        "type": "",
                        "value": "FAC: IDT_ADDR"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2729:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2729:43:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2729:43:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2781:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2793:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2804:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2789:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2789:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2781:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7fa3d32eebe3421dd1dcf1b462886ebe55ee459d6a99a24eb912c2701cf7b5eb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2627:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2641:4:12",
                "type": ""
              }
            ],
            "src": "2476:337:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2992:166:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3009:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3020:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3002:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3002:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3002:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3043:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3054:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3039:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3039:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3059:2:12",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3032:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3032:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3032:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3082:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3093:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3078:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3078:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3098:18:12",
                        "type": "",
                        "value": "FAC: PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3071:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3071:46:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3071:46:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3126:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3138:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3149:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3134:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3134:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3126:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8e65aa094b46876e3dc2938602c1a4c759837c4593e3a5804d0dc0eb38a99b78__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2969:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2983:4:12",
                "type": ""
              }
            ],
            "src": "2818:340:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3337:164:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3354:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3365:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3347:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3347:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3347:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3388:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3399:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3384:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3384:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3404:2:12",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3377:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3377:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3377:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3427:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3438:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3423:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3423:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3443:16:12",
                        "type": "",
                        "value": "FAC: ZERO_ADDR"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3416:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3416:44:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3416:44:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3469:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3481:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3492:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3477:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3477:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3469:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d82b298bdd6f95811ec98ff323569113526731b091c3599908660ea084da1ce0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3314:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3328:4:12",
                "type": ""
              }
            ],
            "src": "3163:338:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3607:76:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3617:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3629:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3640:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3625:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3625:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3617:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3659:9:12"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3670:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3652:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3652:25:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3652:25:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3576:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3587:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3598:4:12",
                "type": ""
              }
            ],
            "src": "3506:177:12"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_7edd150e97805c350c69c1cdb53519db184f07073a209205e003b70a499d164c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"FAC: CALLER_AINT_SETTER\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7fa3d32eebe3421dd1dcf1b462886ebe55ee459d6a99a24eb912c2701cf7b5eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"FAC: IDT_ADDR\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8e65aa094b46876e3dc2938602c1a4c759837c4593e3a5804d0dc0eb38a99b78__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"FAC: PAIR_EXISTS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d82b298bdd6f95811ec98ff323569113526731b091c3599908660ea084da1ce0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"FAC: ZERO_ADDR\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "157:1814:1:-:0;;;445:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;489:11;:26;;-1:-1:-1;;;;;;489:26:1;-1:-1:-1;;;;;489:26:1;;;;;;;;;;157:1814;;14:310:12;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:12;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:12:o;:::-;157:1814:1;;;;;;",
  "deployedSourceMap": "157:1814:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;286:29;;;;;;;;;;;;1435:42:12;1423:55;;;1405:74;;1393:2;1378:18;286:29:1;;;;;;;;321:35;;;;;;;;;246:34;;;;;;:::i;:::-;;:::i;1866:103::-;1924:4;1947:15;1866:103;;3652:25:12;;;3640:2;3625:18;1866:103:1;3607:76:12;1631:190:1;;;;;;:::i;:::-;;:::i;:::-;;553:900;;;;;;:::i;:::-;;:::i;367:71::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1459:166;;;;;;:::i;:::-;;:::i;246:34::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;246:34:1;:::o;1631:190::-;1727:11;;;;1713:10;:25;1705:73;;;;;;;2326:2:12;1705:73:1;;;2308:21:12;2365:2;2345:18;;;2338:30;2404:25;2384:18;;;2377:53;2447:18;;1705:73:1;;;;;;;;;1788:11;:26;;;;;;;;;;;;;;;1631:190::o;553:900::-;666:12;712:6;702:16;;:6;:16;;;;694:42;;;;;;;2678:2:12;694:42:1;;;2660:21:12;2717:2;2697:18;;;2690:30;2756:15;2736:18;;;2729:43;2789:18;;694:42:1;2650:163:12;694:42:1;747:14;763;790:6;781:15;;:6;:15;;;:53;;819:6;827;781:53;;;800:6;808;781:53;746:88;;-1:-1:-1;746:88:1;-1:-1:-1;852:20:1;;;844:47;;;;;;;3365:2:12;844:47:1;;;3347:21:12;3404:2;3384:18;;;3377:30;3443:16;3423:18;;;3416:44;3477:18;;844:47:1;3337:164:12;844:47:1;909:37;:15;;;944:1;909:15;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:37;901:66;;;;;;;3020:2:12;901:66:1;;;3002:21:12;3059:2;3039:18;;;3032:30;3098:18;3078;;;3071:46;3134:18;;901:66:1;2992:166:12;901:66:1;977:21;1001:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1053:66:12;1148:2;1144:15;;;1140:24;;1001:38:1;1074:32;;1128:37:12;1199:15;;;1195:24;1181:12;;;1174:46;1001:38:1;;-1:-1:-1;1049:12:1;;1236::12;;1074:32:1;;;;;;;;;;;;1064:43;;;;;;1049:58;;1195:4;1184:8;1178:15;1173:2;1163:8;1159:17;1156:1;1148:52;1219:53;;;;;:37;1743:15:12;;;1219:53:1;;;1725:34:12;1795:15;;;1775:18;;;1768:43;1140:60:1;;-1:-1:-1;1219:37:1;;;;;;1637:18:12;;1219:53:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1282:15:1;;;;;;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:30;;;;;;;;;;;;;;1322:15;;;;;;:23;;;;;;;;:30;;;;;;;;1362:19;;-1:-1:-1;1362:19:1;;;;;;;;;;;;;;;;;;;1430:15;;1396:50;;1996:74:12;;;2086:18;;;2079:34;1396:50:1;;1969:18:12;1396:50:1;;;;;;;553:900;;;;;;;;:::o;1459:166::-;1543:11;;;;1529:10;:25;1521:73;;;;;;;2326:2:12;1521:73:1;;;2308:21:12;2365:2;2345:18;;;2338:30;2404:25;2384:18;;;2377:53;2447:18;;1521:73:1;2298:173:12;1521:73:1;1604:5;:14;;;;;;;;;;;;;;;1459:166::o;-1:-1:-1:-;;;;;;;;:::o;14:196:12:-;82:20;;142:42;131:54;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:196::-;274:6;327:2;315:9;306:7;302:23;298:32;295:2;;;348:6;340;333:22;295:2;376:29;395:9;376:29;:::i;:::-;366:39;285:126;-1:-1:-1;;;285:126:12:o;416:270::-;484:6;492;545:2;533:9;524:7;520:23;516:32;513:2;;;566:6;558;551:22;513:2;594:29;613:9;594:29;:::i;:::-;584:39;;642:38;676:2;665:9;661:18;642:38;:::i;:::-;632:48;;503:183;;;;;:::o;691:190::-;750:6;803:2;791:9;782:7;778:23;774:32;771:2;;;824:6;816;809:22;771:2;-1:-1:-1;852:23:12;;761:120;-1:-1:-1;761:120:12:o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.8.0 <0.9.0;\n\nimport \"./interfaces/ICoinvestingDeFiFactory.sol\";\nimport \"./CoinvestingDeFiPair.sol\";\n\ncontract CoinvestingDeFiFactory is ICoinvestingDeFiFactory {\n    // Public variables\n    address[] public override allPairs;\n    address public override feeTo;\n    address public override feeToSetter;\n    \n    mapping(address => mapping(address => address)) public override getPair;\n\n    constructor(address _feeToSetter) {\n        feeToSetter = _feeToSetter;\n    }\n\n    //External functions\n    function createPair(\n        address tokenA,\n        address tokenB\n    )\n    external\n    override\n    returns (address pair)\n    {\n        require(tokenA != tokenB, \"FAC: IDT_ADDR\");\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), \"FAC: ZERO_ADDR\");\n        require(getPair[token0][token1] == address(0), \"FAC: PAIR_EXISTS\");\n        bytes memory bytecode = type(CoinvestingDeFiPair).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        ICoinvestingDeFiPair(pair).initialize(token0, token1);\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair;\n        allPairs.push(pair);\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    function setFeeTo(address _feeTo) external override {\n        require(msg.sender == feeToSetter,\n            \"FAC: CALLER_AINT_SETTER\");\n        feeTo = _feeTo;\n    }\n\n    function setFeeToSetter(address _feeToSetter) external override {\n        require(msg.sender == feeToSetter,\n            \"FAC: CALLER_AINT_SETTER\");\n        feeToSetter = _feeToSetter;\n    }\n\n    //External functions that are view\n    function allPairsLength() external view override returns (uint) {\n        return allPairs.length;\n    }\n}\n",
  "sourcePath": "/home/dev/Playground/Coinvesting DeFi/Dex/coinvesting-defi-dex-core/contracts/CoinvestingDeFiFactory.sol",
  "ast": {
    "absolutePath": "/home/dev/Playground/Coinvesting DeFi/Dex/coinvesting-defi-dex-core/contracts/CoinvestingDeFiFactory.sol",
    "exportedSymbols": {
      "CoinvestingDeFiERC20": [
        394
      ],
      "CoinvestingDeFiFactory": [
        589
      ],
      "CoinvestingDeFiPair": [
        1641
      ],
      "ICoinvestingDeFiCallee": [
        1655
      ],
      "ICoinvestingDeFiERC20": [
        1773
      ],
      "ICoinvestingDeFiFactory": [
        1836
      ],
      "ICoinvestingDeFiPair": [
        1966
      ],
      "IERC20": [
        2050
      ],
      "Math": [
        2128
      ],
      "SafeMath": [
        2440
      ],
      "UQ112x112": [
        2487
      ]
    },
    "id": 590,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 396,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:31:1"
      },
      {
        "absolutePath": "/home/dev/Playground/Coinvesting DeFi/Dex/coinvesting-defi-dex-core/contracts/interfaces/ICoinvestingDeFiFactory.sol",
        "file": "./interfaces/ICoinvestingDeFiFactory.sol",
        "id": 397,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 590,
        "sourceUnit": 1837,
        "src": "69:50:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dev/Playground/Coinvesting DeFi/Dex/coinvesting-defi-dex-core/contracts/CoinvestingDeFiPair.sol",
        "file": "./CoinvestingDeFiPair.sol",
        "id": 398,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 590,
        "sourceUnit": 1642,
        "src": "120:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 399,
              "name": "ICoinvestingDeFiFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1836,
              "src": "192:23:1"
            },
            "id": 400,
            "nodeType": "InheritanceSpecifier",
            "src": "192:23:1"
          }
        ],
        "contractDependencies": [
          1641
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 589,
        "linearizedBaseContracts": [
          589,
          1836
        ],
        "name": "CoinvestingDeFiFactory",
        "nameLocation": "166:22:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1811
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 404,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "272:8:1",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 403,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "263:8:1"
            },
            "scope": 589,
            "src": "246:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 401,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "246:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 402,
              "nodeType": "ArrayTypeName",
              "src": "246:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1821
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 407,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "310:5:1",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 406,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "301:8:1"
            },
            "scope": 589,
            "src": "286:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 405,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "286:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1826
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 410,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "345:11:1",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 409,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "336:8:1"
            },
            "scope": 589,
            "src": "321:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 408,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "321:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1835
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 417,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "431:7:1",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 416,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "422:8:1"
            },
            "scope": 589,
            "src": "367:71:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 415,
              "keyType": {
                "id": 411,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "375:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "367:47:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 414,
                "keyType": {
                  "id": 412,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "394:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "386:27:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 413,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "405:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "479:43:1",
              "statements": [
                {
                  "expression": {
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 422,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 410,
                      "src": "489:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 423,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 419,
                      "src": "503:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "489:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 425,
                  "nodeType": "ExpressionStatement",
                  "src": "489:26:1"
                }
              ]
            },
            "id": 427,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "465:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "457:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "456:22:1"
            },
            "returnParameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "479:0:1"
            },
            "scope": 589,
            "src": "445:77:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1794
            ],
            "body": {
              "id": 539,
              "nodeType": "Block",
              "src": "684:769:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 438,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "702:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 439,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 431,
                          "src": "712:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "702:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4641433a204944545f41444452",
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "720:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fa3d32eebe3421dd1dcf1b462886ebe55ee459d6a99a24eb912c2701cf7b5eb",
                          "typeString": "literal_string \"FAC: IDT_ADDR\""
                        },
                        "value": "FAC: IDT_ADDR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fa3d32eebe3421dd1dcf1b462886ebe55ee459d6a99a24eb912c2701cf7b5eb",
                          "typeString": "literal_string \"FAC: IDT_ADDR\""
                        }
                      ],
                      "id": 437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "694:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "694:42:1"
                },
                {
                  "assignments": [
                    445,
                    447
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 445,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "755:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 539,
                      "src": "747:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 444,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "747:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 447,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "771:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 539,
                      "src": "763:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 446,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "763:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 458,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 448,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "781:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 449,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 431,
                        "src": "790:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "781:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 454,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 431,
                          "src": "819:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 455,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "827:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 456,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "818:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "781:53:1",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 451,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "800:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 452,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 431,
                          "src": "808:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 453,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "799:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "746:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 460,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 445,
                          "src": "852:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "870:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "862:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 461,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "862:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "862:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "852:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4641433a205a45524f5f41444452",
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "874:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d82b298bdd6f95811ec98ff323569113526731b091c3599908660ea084da1ce0",
                          "typeString": "literal_string \"FAC: ZERO_ADDR\""
                        },
                        "value": "FAC: ZERO_ADDR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d82b298bdd6f95811ec98ff323569113526731b091c3599908660ea084da1ce0",
                          "typeString": "literal_string \"FAC: ZERO_ADDR\""
                        }
                      ],
                      "id": 459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "844:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "844:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "844:47:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 470,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 417,
                              "src": "909:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 472,
                            "indexExpression": {
                              "id": 471,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 445,
                              "src": "917:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "909:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 474,
                          "indexExpression": {
                            "id": 473,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 447,
                            "src": "925:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "909:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "944:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "936:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 475,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "936:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "936:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "909:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4641433a20504149525f455849535453",
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "948:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e65aa094b46876e3dc2938602c1a4c759837c4593e3a5804d0dc0eb38a99b78",
                          "typeString": "literal_string \"FAC: PAIR_EXISTS\""
                        },
                        "value": "FAC: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e65aa094b46876e3dc2938602c1a4c759837c4593e3a5804d0dc0eb38a99b78",
                          "typeString": "literal_string \"FAC: PAIR_EXISTS\""
                        }
                      ],
                      "id": 469,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "901:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "901:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 482,
                  "nodeType": "ExpressionStatement",
                  "src": "901:66:1"
                },
                {
                  "assignments": [
                    484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 484,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "990:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 539,
                      "src": "977:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 483,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "977:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 489,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 486,
                          "name": "CoinvestingDeFiPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1641,
                          "src": "1006:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CoinvestingDeFiPair_$1641_$",
                            "typeString": "type(contract CoinvestingDeFiPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_CoinvestingDeFiPair_$1641_$",
                            "typeString": "type(contract CoinvestingDeFiPair)"
                          }
                        ],
                        "id": 485,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1001:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1001:25:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_CoinvestingDeFiPair_$1641",
                        "typeString": "type(contract CoinvestingDeFiPair)"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1001:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "977:62:1"
                },
                {
                  "assignments": [
                    491
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 491,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1057:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 539,
                      "src": "1049:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 490,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1049:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 499,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 495,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 445,
                            "src": "1091:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 496,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 447,
                            "src": "1099:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 493,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1074:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1074:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1074:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 492,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1064:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1064:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1049:58:1"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1126:84:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1140:60:1",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1156:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1163:8:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1173:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1159:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1159:17:1"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1184:8:1"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1178:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1178:15:1"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1195:4:1"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1148:7:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1148:52:1"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1140:4:1"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "berlin",
                  "externalReferences": [
                    {
                      "declaration": 484,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1163:8:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 484,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1184:8:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 435,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1140:4:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 491,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1195:4:1",
                      "valueSize": 1
                    }
                  ],
                  "id": 500,
                  "nodeType": "InlineAssembly",
                  "src": "1117:93:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 505,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "1257:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 506,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 447,
                        "src": "1265:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 502,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "1240:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 501,
                          "name": "ICoinvestingDeFiPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1966,
                          "src": "1219:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICoinvestingDeFiPair_$1966_$",
                            "typeString": "type(contract ICoinvestingDeFiPair)"
                          }
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1219:26:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoinvestingDeFiPair_$1966",
                          "typeString": "contract ICoinvestingDeFiPair"
                        }
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1895,
                      "src": "1219:37:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1219:53:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "1219:53:1"
                },
                {
                  "expression": {
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 509,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 417,
                          "src": "1282:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 512,
                        "indexExpression": {
                          "id": 510,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 445,
                          "src": "1290:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1282:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 513,
                      "indexExpression": {
                        "id": 511,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 447,
                        "src": "1298:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1282:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 514,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "1308:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1282:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 516,
                  "nodeType": "ExpressionStatement",
                  "src": "1282:30:1"
                },
                {
                  "expression": {
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 517,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 417,
                          "src": "1322:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 520,
                        "indexExpression": {
                          "id": 518,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 447,
                          "src": "1330:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1322:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 521,
                      "indexExpression": {
                        "id": 519,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "1338:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1322:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 522,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "1348:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1322:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "1322:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 528,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "1376:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 525,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "1362:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1362:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1362:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 530,
                  "nodeType": "ExpressionStatement",
                  "src": "1362:19:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 532,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "1408:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 533,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 447,
                        "src": "1416:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 534,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "1424:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 535,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 404,
                          "src": "1430:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1430:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 531,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1785,
                      "src": "1396:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1396:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "EmitStatement",
                  "src": "1391:55:1"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 540,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "562:10:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 433,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "644:8:1"
            },
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "590:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "582:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 431,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "614:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "606:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "606:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "572:54:1"
            },
            "returnParameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "674:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "666:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "666:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "665:14:1"
            },
            "scope": 589,
            "src": "553:900:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1799
            ],
            "body": {
              "id": 558,
              "nodeType": "Block",
              "src": "1511:114:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 547,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1529:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1529:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 549,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "1543:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1529:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4641433a2043414c4c45525f41494e545f534554544552",
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1568:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7edd150e97805c350c69c1cdb53519db184f07073a209205e003b70a499d164c",
                          "typeString": "literal_string \"FAC: CALLER_AINT_SETTER\""
                        },
                        "value": "FAC: CALLER_AINT_SETTER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7edd150e97805c350c69c1cdb53519db184f07073a209205e003b70a499d164c",
                          "typeString": "literal_string \"FAC: CALLER_AINT_SETTER\""
                        }
                      ],
                      "id": 546,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1521:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1521:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "1521:73:1"
                },
                {
                  "expression": {
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 554,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "1604:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 555,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 542,
                      "src": "1612:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1604:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "1604:14:1"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 559,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1468:8:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 544,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1502:8:1"
            },
            "parameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 542,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1485:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "1477:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1477:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1476:16:1"
            },
            "returnParameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1511:0:1"
            },
            "scope": 589,
            "src": "1459:166:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1804
            ],
            "body": {
              "id": 577,
              "nodeType": "Block",
              "src": "1695:126:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 566,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1713:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1713:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 568,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "1727:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1713:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4641433a2043414c4c45525f41494e545f534554544552",
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1752:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7edd150e97805c350c69c1cdb53519db184f07073a209205e003b70a499d164c",
                          "typeString": "literal_string \"FAC: CALLER_AINT_SETTER\""
                        },
                        "value": "FAC: CALLER_AINT_SETTER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7edd150e97805c350c69c1cdb53519db184f07073a209205e003b70a499d164c",
                          "typeString": "literal_string \"FAC: CALLER_AINT_SETTER\""
                        }
                      ],
                      "id": 565,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1705:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1705:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "1705:73:1"
                },
                {
                  "expression": {
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 573,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 410,
                      "src": "1788:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 574,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 561,
                      "src": "1802:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1788:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 576,
                  "nodeType": "ExpressionStatement",
                  "src": "1788:26:1"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1640:14:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 563,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1686:8:1"
            },
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 561,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1663:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 578,
                  "src": "1655:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1655:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1654:22:1"
            },
            "returnParameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1695:0:1"
            },
            "scope": 589,
            "src": "1631:190:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1816
            ],
            "body": {
              "id": 587,
              "nodeType": "Block",
              "src": "1930:39:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 584,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 404,
                      "src": "1947:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1947:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 583,
                  "id": 586,
                  "nodeType": "Return",
                  "src": "1940:22:1"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 588,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "1875:14:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 580,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1906:8:1"
            },
            "parameters": {
              "id": 579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1889:2:1"
            },
            "returnParameters": {
              "id": 583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 582,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "1924:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1924:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1923:6:1"
            },
            "scope": 589,
            "src": "1866:103:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 590,
        "src": "157:1814:1",
        "usedErrors": []
      }
    ],
    "src": "36:1936:1"
  },
  "legacyAST": {
    "absolutePath": "/home/dev/Playground/Coinvesting DeFi/Dex/coinvesting-defi-dex-core/contracts/CoinvestingDeFiFactory.sol",
    "exportedSymbols": {
      "CoinvestingDeFiERC20": [
        394
      ],
      "CoinvestingDeFiFactory": [
        589
      ],
      "CoinvestingDeFiPair": [
        1641
      ],
      "ICoinvestingDeFiCallee": [
        1655
      ],
      "ICoinvestingDeFiERC20": [
        1773
      ],
      "ICoinvestingDeFiFactory": [
        1836
      ],
      "ICoinvestingDeFiPair": [
        1966
      ],
      "IERC20": [
        2050
      ],
      "Math": [
        2128
      ],
      "SafeMath": [
        2440
      ],
      "UQ112x112": [
        2487
      ]
    },
    "id": 590,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 396,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:31:1"
      },
      {
        "absolutePath": "/home/dev/Playground/Coinvesting DeFi/Dex/coinvesting-defi-dex-core/contracts/interfaces/ICoinvestingDeFiFactory.sol",
        "file": "./interfaces/ICoinvestingDeFiFactory.sol",
        "id": 397,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 590,
        "sourceUnit": 1837,
        "src": "69:50:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dev/Playground/Coinvesting DeFi/Dex/coinvesting-defi-dex-core/contracts/CoinvestingDeFiPair.sol",
        "file": "./CoinvestingDeFiPair.sol",
        "id": 398,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 590,
        "sourceUnit": 1642,
        "src": "120:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 399,
              "name": "ICoinvestingDeFiFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1836,
              "src": "192:23:1"
            },
            "id": 400,
            "nodeType": "InheritanceSpecifier",
            "src": "192:23:1"
          }
        ],
        "contractDependencies": [
          1641
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 589,
        "linearizedBaseContracts": [
          589,
          1836
        ],
        "name": "CoinvestingDeFiFactory",
        "nameLocation": "166:22:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1811
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 404,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "272:8:1",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 403,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "263:8:1"
            },
            "scope": 589,
            "src": "246:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 401,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "246:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 402,
              "nodeType": "ArrayTypeName",
              "src": "246:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1821
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 407,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "310:5:1",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 406,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "301:8:1"
            },
            "scope": 589,
            "src": "286:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 405,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "286:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1826
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 410,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "345:11:1",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 409,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "336:8:1"
            },
            "scope": 589,
            "src": "321:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 408,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "321:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1835
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 417,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "431:7:1",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 416,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "422:8:1"
            },
            "scope": 589,
            "src": "367:71:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 415,
              "keyType": {
                "id": 411,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "375:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "367:47:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 414,
                "keyType": {
                  "id": 412,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "394:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "386:27:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 413,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "405:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "479:43:1",
              "statements": [
                {
                  "expression": {
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 422,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 410,
                      "src": "489:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 423,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 419,
                      "src": "503:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "489:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 425,
                  "nodeType": "ExpressionStatement",
                  "src": "489:26:1"
                }
              ]
            },
            "id": 427,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "465:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "457:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "456:22:1"
            },
            "returnParameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "479:0:1"
            },
            "scope": 589,
            "src": "445:77:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1794
            ],
            "body": {
              "id": 539,
              "nodeType": "Block",
              "src": "684:769:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 438,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "702:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 439,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 431,
                          "src": "712:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "702:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4641433a204944545f41444452",
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "720:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fa3d32eebe3421dd1dcf1b462886ebe55ee459d6a99a24eb912c2701cf7b5eb",
                          "typeString": "literal_string \"FAC: IDT_ADDR\""
                        },
                        "value": "FAC: IDT_ADDR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fa3d32eebe3421dd1dcf1b462886ebe55ee459d6a99a24eb912c2701cf7b5eb",
                          "typeString": "literal_string \"FAC: IDT_ADDR\""
                        }
                      ],
                      "id": 437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "694:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "694:42:1"
                },
                {
                  "assignments": [
                    445,
                    447
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 445,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "755:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 539,
                      "src": "747:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 444,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "747:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 447,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "771:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 539,
                      "src": "763:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 446,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "763:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 458,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 448,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "781:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 449,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 431,
                        "src": "790:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "781:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 454,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 431,
                          "src": "819:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 455,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "827:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 456,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "818:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "781:53:1",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 451,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "800:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 452,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 431,
                          "src": "808:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 453,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "799:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "746:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 460,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 445,
                          "src": "852:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "870:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "862:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 461,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "862:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "862:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "852:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4641433a205a45524f5f41444452",
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "874:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d82b298bdd6f95811ec98ff323569113526731b091c3599908660ea084da1ce0",
                          "typeString": "literal_string \"FAC: ZERO_ADDR\""
                        },
                        "value": "FAC: ZERO_ADDR"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d82b298bdd6f95811ec98ff323569113526731b091c3599908660ea084da1ce0",
                          "typeString": "literal_string \"FAC: ZERO_ADDR\""
                        }
                      ],
                      "id": 459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "844:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "844:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "844:47:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 470,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 417,
                              "src": "909:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 472,
                            "indexExpression": {
                              "id": 471,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 445,
                              "src": "917:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "909:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 474,
                          "indexExpression": {
                            "id": 473,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 447,
                            "src": "925:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "909:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "944:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "936:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 475,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "936:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "936:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "909:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4641433a20504149525f455849535453",
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "948:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e65aa094b46876e3dc2938602c1a4c759837c4593e3a5804d0dc0eb38a99b78",
                          "typeString": "literal_string \"FAC: PAIR_EXISTS\""
                        },
                        "value": "FAC: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e65aa094b46876e3dc2938602c1a4c759837c4593e3a5804d0dc0eb38a99b78",
                          "typeString": "literal_string \"FAC: PAIR_EXISTS\""
                        }
                      ],
                      "id": 469,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "901:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "901:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 482,
                  "nodeType": "ExpressionStatement",
                  "src": "901:66:1"
                },
                {
                  "assignments": [
                    484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 484,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "990:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 539,
                      "src": "977:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 483,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "977:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 489,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 486,
                          "name": "CoinvestingDeFiPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1641,
                          "src": "1006:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CoinvestingDeFiPair_$1641_$",
                            "typeString": "type(contract CoinvestingDeFiPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_CoinvestingDeFiPair_$1641_$",
                            "typeString": "type(contract CoinvestingDeFiPair)"
                          }
                        ],
                        "id": 485,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1001:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1001:25:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_CoinvestingDeFiPair_$1641",
                        "typeString": "type(contract CoinvestingDeFiPair)"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1001:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "977:62:1"
                },
                {
                  "assignments": [
                    491
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 491,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1057:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 539,
                      "src": "1049:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 490,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1049:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 499,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 495,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 445,
                            "src": "1091:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 496,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 447,
                            "src": "1099:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 493,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1074:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1074:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1074:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 492,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1064:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1064:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1049:58:1"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1126:84:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1140:60:1",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1156:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1163:8:1"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1173:2:1",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1159:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1159:17:1"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1184:8:1"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1178:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1178:15:1"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1195:4:1"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1148:7:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1148:52:1"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1140:4:1"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "berlin",
                  "externalReferences": [
                    {
                      "declaration": 484,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1163:8:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 484,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1184:8:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 435,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1140:4:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 491,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1195:4:1",
                      "valueSize": 1
                    }
                  ],
                  "id": 500,
                  "nodeType": "InlineAssembly",
                  "src": "1117:93:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 505,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "1257:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 506,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 447,
                        "src": "1265:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 502,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "1240:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 501,
                          "name": "ICoinvestingDeFiPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1966,
                          "src": "1219:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICoinvestingDeFiPair_$1966_$",
                            "typeString": "type(contract ICoinvestingDeFiPair)"
                          }
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1219:26:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICoinvestingDeFiPair_$1966",
                          "typeString": "contract ICoinvestingDeFiPair"
                        }
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1895,
                      "src": "1219:37:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1219:53:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "1219:53:1"
                },
                {
                  "expression": {
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 509,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 417,
                          "src": "1282:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 512,
                        "indexExpression": {
                          "id": 510,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 445,
                          "src": "1290:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1282:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 513,
                      "indexExpression": {
                        "id": 511,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 447,
                        "src": "1298:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1282:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 514,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "1308:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1282:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 516,
                  "nodeType": "ExpressionStatement",
                  "src": "1282:30:1"
                },
                {
                  "expression": {
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 517,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 417,
                          "src": "1322:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 520,
                        "indexExpression": {
                          "id": 518,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 447,
                          "src": "1330:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1322:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 521,
                      "indexExpression": {
                        "id": 519,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "1338:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1322:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 522,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "1348:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1322:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "1322:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 528,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "1376:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 525,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "1362:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1362:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1362:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 530,
                  "nodeType": "ExpressionStatement",
                  "src": "1362:19:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 532,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 445,
                        "src": "1408:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 533,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 447,
                        "src": "1416:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 534,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "1424:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 535,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 404,
                          "src": "1430:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1430:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 531,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1785,
                      "src": "1396:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1396:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "EmitStatement",
                  "src": "1391:55:1"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 540,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "562:10:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 433,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "644:8:1"
            },
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "590:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "582:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 431,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "614:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "606:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "606:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "572:54:1"
            },
            "returnParameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "674:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 540,
                  "src": "666:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "666:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "665:14:1"
            },
            "scope": 589,
            "src": "553:900:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1799
            ],
            "body": {
              "id": 558,
              "nodeType": "Block",
              "src": "1511:114:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 547,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1529:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1529:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 549,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "1543:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1529:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4641433a2043414c4c45525f41494e545f534554544552",
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1568:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7edd150e97805c350c69c1cdb53519db184f07073a209205e003b70a499d164c",
                          "typeString": "literal_string \"FAC: CALLER_AINT_SETTER\""
                        },
                        "value": "FAC: CALLER_AINT_SETTER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7edd150e97805c350c69c1cdb53519db184f07073a209205e003b70a499d164c",
                          "typeString": "literal_string \"FAC: CALLER_AINT_SETTER\""
                        }
                      ],
                      "id": 546,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1521:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1521:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "1521:73:1"
                },
                {
                  "expression": {
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 554,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "1604:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 555,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 542,
                      "src": "1612:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1604:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 557,
                  "nodeType": "ExpressionStatement",
                  "src": "1604:14:1"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 559,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1468:8:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 544,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1502:8:1"
            },
            "parameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 542,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1485:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "1477:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1477:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1476:16:1"
            },
            "returnParameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1511:0:1"
            },
            "scope": 589,
            "src": "1459:166:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1804
            ],
            "body": {
              "id": 577,
              "nodeType": "Block",
              "src": "1695:126:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 566,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1713:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1713:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 568,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "1727:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1713:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4641433a2043414c4c45525f41494e545f534554544552",
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1752:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7edd150e97805c350c69c1cdb53519db184f07073a209205e003b70a499d164c",
                          "typeString": "literal_string \"FAC: CALLER_AINT_SETTER\""
                        },
                        "value": "FAC: CALLER_AINT_SETTER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7edd150e97805c350c69c1cdb53519db184f07073a209205e003b70a499d164c",
                          "typeString": "literal_string \"FAC: CALLER_AINT_SETTER\""
                        }
                      ],
                      "id": 565,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1705:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1705:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "1705:73:1"
                },
                {
                  "expression": {
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 573,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 410,
                      "src": "1788:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 574,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 561,
                      "src": "1802:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1788:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 576,
                  "nodeType": "ExpressionStatement",
                  "src": "1788:26:1"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1640:14:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 563,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1686:8:1"
            },
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 561,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1663:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 578,
                  "src": "1655:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1655:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1654:22:1"
            },
            "returnParameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1695:0:1"
            },
            "scope": 589,
            "src": "1631:190:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1816
            ],
            "body": {
              "id": 587,
              "nodeType": "Block",
              "src": "1930:39:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 584,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 404,
                      "src": "1947:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1947:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 583,
                  "id": 586,
                  "nodeType": "Return",
                  "src": "1940:22:1"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 588,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "1875:14:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 580,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1906:8:1"
            },
            "parameters": {
              "id": 579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1889:2:1"
            },
            "returnParameters": {
              "id": 583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 582,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "1924:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1924:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1923:6:1"
            },
            "scope": 589,
            "src": "1866:103:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 590,
        "src": "157:1814:1",
        "usedErrors": []
      }
    ],
    "src": "36:1936:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-27T06:23:09.942Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}